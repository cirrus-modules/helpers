task:
  name: task with a default container
  container:
    cpu: 2
    memory: 4096
task:
  name: task with an environment
  env:
    A: B
  container:
    cpu: 2
    memory: 4096
task:
  name: task with 'allow_failures'
  allow_failures: true
  container:
    cpu: 2
    memory: 4096
task:
  name: task with 'auto_cancellation'
  auto_cancellation: true
  container:
    cpu: 2
    memory: 4096
task:
  name: task with 'execution_lock'
  execution_lock: $CIRRUS_BRANCH
  container:
    cpu: 2
    memory: 4096
task:
  name: task with 'only_if'
  only_if: $CIRRUS_BRANCH == 'master'
  container:
    cpu: 2
    memory: 4096
task:
  name: task with 'required_pr_labels' as string
  required_pr_labels: initial-review
  container:
    cpu: 2
    memory: 4096
task:
  name: task with 'required_pr_labels' as list
  required_pr_labels:
    - initial-review
    - ready-for-staging
  container:
    cpu: 2
    memory: 4096
task:
  name: task with 'skip'
  skip: '!changesInclude(''.cirrus.yml'', ''**.{js,ts}'')'
  container:
    cpu: 2
    memory: 4096
task:
  name: task with 'skip_notifications'
  skip_notifications: true
  container:
    cpu: 2
    memory: 4096
task:
  name: task with 'stateful'
  stateful: true
  container:
    cpu: 2
    memory: 4096
task:
  name: task with 'timeout_in'
  timeout_in: 90m
  container:
    cpu: 2
    memory: 4096
task:
  name: task with 'trigger_type'
  trigger_type: manual
  container:
    cpu: 2
    memory: 4096
task:
  name: task with a cache instruction
  container:
    cpu: 2
    memory: 4096
  node_modules_cache:
    folder: node_modules
task:
  name: task with a script instruction
  container:
    cpu: 2
    memory: 4096
  test_script:
    - go test -v folder1
    - go test -v folder2
task:
  name: task with an artifacts instruction
  container:
    cpu: 2
    memory: 4096
  junit_artifacts:
    path: junit.xml
task:
  name: task with a script that runs always
  container:
    cpu: 2
    memory: 4096
  always:
    do_always_script:
      - "true"
task:
  name: task with a script that runs on failure
  container:
    cpu: 2
    memory: 4096
  on_failure:
    do_on_failure_script:
      - "true"
task:
  name: task with a script that runs on success
  container:
    cpu: 2
    memory: 4096
  on_success:
    do_on_success_script:
      - "true"
